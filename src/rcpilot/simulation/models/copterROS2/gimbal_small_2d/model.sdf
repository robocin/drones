<?xml version='1.0'?>
<sdf version='1.6'>
  <model name='gimbal_small_2d'>
    <pose>0 0 0.18 0 0 0</pose>

    <link name='base_link'>
       <inertial>
        <mass>0.2</mass>
        <inertia>
          <ixx>0.0001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0001</iyy>
          <iyz>0</iyz>
          <izz>0.0001</izz>
        </inertia>
      </inertial>

      <visual name='base_main_viz'>
        <geometry>
         <mesh>
           <scale>0.001 0.001 0.001</scale>
           <uri>model://gimbal_small_2d/meshes/base_main.dae</uri>
         </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/FlatBlack</name>
          </script>
        </material>
      </visual>

     <visual name='base_arm_viz'>
        <geometry>
         <mesh>
           <scale>0.001 0.001 0.001</scale>
           <uri>model://gimbal_small_2d/meshes/base_arm.dae</uri>
         </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/FlatBlack</name>
          </script>
        </material>
      </visual>

      <collision name='base_col'>
        <pose>0.01 0.075 -0.025 0 0 0</pose>
        <geometry>
          <box>
            <size>0.1 0.05 0.15</size>
          </box>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>

    <link name='tilt_link'>
       <inertial>
        <mass>0.01</mass>
        <inertia>
          <ixx>0.00001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00001</iyy>
          <iyz>0</iyz>
          <izz>0.00001</izz>
        </inertia>
      </inertial>
     <visual name='tilt_viz'>
        <pose>0 0 -0.005 0 0 0</pose>
        <geometry>
         <mesh>
           <scale>0.001 0.001 0.001</scale>
           <uri>model://gimbal_small_2d/meshes/tilt.dae</uri>
         </mesh>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Grey</name>
          </script>
        </material>
      </visual>

     <collision name='tilt_col'>
        <pose>0 0 -0.005 0 0 0</pose>
        <geometry>
         <mesh>
           <scale>0.001 0.001 0.001</scale>
           <uri>model://gimbal_small_2d/meshes/tilt.dae</uri>
         </mesh>
        </geometry>
      </collision>

      <visual name='camera_viz'>
        <pose>0 0 0.02 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.025</radius>
            <length>0.050</length>
          </cylinder>
        </geometry>

         <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Grey</name>
          </script>
        </material>
     </visual>

      <collision name='camera_col'>
        <pose>0 0 0.02 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.025</radius>
            <length>0.050</length>
          </cylinder>
        </geometry>
     </collision>
      <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>200</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>200.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>base_link</frameName>
      </plugin>
      <pose>0 0 0.2 0 0 0</pose>
      </sensor>
      
      <sensor name="camera" type="depth">
        <pose>0.035 0 0.06 3.14 0 1.57</pose>
        <visualize>true</visualize>
        <update_rate>30.0</update_rate>
        <camera name="depth">
          <horizontal_fov>1.3962634</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.05</near>
              <far>10</far>
            </clip>
        </camera>
         <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <ros>
            <namespace></namespace>
            <argument>camera/image_raw:=image_raw</argument>
            <argument>camera/camera_info:=camera_info</argument>
          </ros>
        </plugin>
      </sensor>
      <sensor type="multicamera" name="camera1">
          <pose>0 0 0.06 3.14 0 1.57</pose>
          <update_rate>30.0</update_rate>
          <camera name="left">
            <pose>0 0.035 0 0 0 0</pose>
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                   That pixel's noise value is added to each of its color
                   channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <camera name="right">
            <pose>0 -0.035 0 0 0 0</pose>
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                   That pixel's noise value is added to each of its color
                   channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <camera name="down">
            <pose>0 0 0 0 1.57 0</pose>
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                   That pixel's noise value is added to each of its color
                   channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <ros>
              <namespace>test_cam</namespace>
              <argument>camera1/left/image_raw:=camera/left/image_test</argument>
              <argument>camera1/right/image_raw:=camera/right/image_test</argument>
              <argument>camera1/down/image_raw:=camera/down/image_test</argument>
            </ros>
            <!-- camera_name>omit so it defaults to sensor name</camera_name-->
            <!-- frame_name>omit so it defaults to link name</frameName-->
            <hack_baseline>0.07</hack_baseline>
          </plugin>
        </sensor>
  

    </link>

    <joint name='tilt_joint' type='revolute'>
       <parent>base_link</parent>
       <child>tilt_link</child>

      <physics>
        <ode>
          <implicit_spring_damper>1</implicit_spring_damper>
        </ode>
      </physics>

      <axis>
        <xyz>1 0 0</xyz>
        <dynamics>
          <damping>0.5</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
        <limit>
          <lower>-0.1</lower>
          <upper>3.14159265</upper>
          <effort>10</effort>
          <velocity>-1</velocity>
        </limit>
      </axis>
      <pose>0 0 0.02 0 0 0</pose>
    </joint>

    <plugin name="gimbal_small_2d" filename="libGimbalSmall2dPlugin.so">
      <joint>tilt_joint</joint>
    </plugin>
  </model>
</sdf>
